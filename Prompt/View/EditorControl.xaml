<UserControl
    x:Class="Prompt.View.EditorControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Custom="http://schemas.microsoft.com/winfx/2006/xaml/presentation/ribbon"
    xmlns:cv="clr-namespace:Prompt.View.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Prompt.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=System"
    xmlns:yz="http://schema.yoderzone.com/wpf"
    d:DesignHeight="367"
    d:DesignWidth="800"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style TargetType="{x:Type StatusBar}">
            <Setter Property="Background" Value="#FFF1EDED" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type StatusBar}">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ToolBar>
            <ToolBar.Resources>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Width" Value="24" />
                    <Setter Property="Height" Value="24" />
                </Style>
            </ToolBar.Resources>
            <Button Command="{Binding Commands.OpenCommand}" Visibility="{Binding Commands.ShowOpenButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Open Folder.png" />
            </Button>
            <Button Command="{Binding Commands.SaveCommand}" Visibility="{Binding Commands.ShowSaveButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Save.png" />
            </Button>
            <Button Command="{Binding Commands.SaveAsCommand}" Visibility="{Binding Commands.ShowSaveAsButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Save as.png" />
            </Button>
            <Button Command="{Binding Commands.PrintDocumentCommand}" Visibility="{Binding Commands.ShowPrintButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Print.png" />
            </Button>
            <Separator Visibility="{Binding Commands.ShowSeperator1, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}" />
            <Button
                Click="AppCmdButtonClicked"
                Command="EditingCommands.ToggleBold"
                Visibility="{Binding Commands.ShowBoldButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Bold.png" />
            </Button>
            <Button
                Click="AppCmdButtonClicked"
                Command="EditingCommands.ToggleItalic"
                Visibility="{Binding Commands.ShowItalicsButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Italic.png" />
            </Button>
            <Button
                Click="AppCmdButtonClicked"
                Command="EditingCommands.ToggleUnderline"
                Visibility="{Binding Commands.ShowUnderlineButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Underline.png" />
            </Button>
            <Separator Visibility="{Binding Commands.ShowSeperator2, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}" />
            <Button Command="{Binding Commands.IncreaseFontSizeCommand}" Visibility="{Binding Commands.ShowIncreaseFontSizeButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Increase Font.png" />
            </Button>
            <Button Command="{Binding Commands.DecreaseFontSizeCommand}" Visibility="{Binding Commands.ShowDecreaseFontSizeButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Decrease Font.png" />
            </Button>
            <Button Command="{Binding Commands.FontColorCommand}" Visibility="{Binding Commands.ShowFontColorButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Text Color.png" />
            </Button>

            <yz:SplitButton
                HorizontalAlignment="Center"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Background="Transparent"
                BorderBrush="#00F0F8FF"
                BorderThickness="0"
                Command="{Binding Commands.FontHighlightCommand}"
                SplitButtonClick="SplitButtonOnSplitButtonClick"
                Visibility="{Binding Commands.ShowFontHighlightButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Border Background="{Binding EditCommands.HighlightColor, Source={StaticResource Locator}, Converter={x:Static cv:Static.ColorToSolidColorBrush}}">
                    <Image Source="/Prompt;component/Images/Marker Pen.png" />
                </Border>
            </yz:SplitButton>

            <Separator Visibility="{Binding Commands.ShowSeperator3, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}" />
            <Button Command="ApplicationCommands.Cut" Visibility="{Binding Commands.ShowCutButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Cut.png" />
            </Button>
            <Button Command="ApplicationCommands.Copy" Visibility="{Binding Commands.ShowCopyButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Copy.png" />
            </Button>
            <Button Command="ApplicationCommands.Paste" Visibility="{Binding Commands.ShowPasteButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Paste.png" />
            </Button>
            <Button Command="{Binding Commands.DeleteCommand}" Visibility="{Binding Commands.ShowDeleteButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Delete.png" />
            </Button>
            <Separator Visibility="{Binding Commands.ShowSeperator4, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}" />
            <Button Command="ApplicationCommands.Undo" Visibility="{Binding Commands.ShowUndoButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Undo.png" />
            </Button>
            <Button Command="ApplicationCommands.Redo" Visibility="{Binding Commands.ShowRedoButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Redo.png" />
            </Button>
            <Separator Visibility="{Binding Commands.ShowSeperator5, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}" />
            <ToggleButton Command="{Binding Commands.SpellCheckCommand}" Visibility="{Binding Commands.ShowSpellCheckButton, Converter={x:Static cv:Static.BoolToVisibleOrCollapsed}}">
                <Image Source="/Prompt;component/Images/Checkmark.png" />
            </ToggleButton>
            <Button Command="{Binding Commands.PropertiesCommand}">
                <Image Source="/Prompt;component/Images/Edit Property.png" />
            </Button>
        </ToolBar>
        <RichTextBox
            x:Name="RichTextBox"
            Grid.Row="1"
            ContextMenuOpening="RtbContextMenuOpening"
            SelectionChanged="RichTextBox_SelectionChanged"
            TabIndex="100"
            TextChanged="RichTextBox_TextChanged">
            <RichTextBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="ApplicationCommands.Cut" />
                    <MenuItem Command="ApplicationCommands.Copy" />
                    <MenuItem Command="ApplicationCommands.Paste" />
                </ContextMenu>
            </RichTextBox.ContextMenu>
        </RichTextBox>
        <StatusBar Grid.Row="2">
            <StatusBar.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="TextWrapping" Value="NoWrap" />
                    <Setter Property="TextTrimming" Value="None" />
                    <Setter Property="Foreground" Value="{Binding IsEnabled, Converter={x:Static cv:Static.BoolToEnabledOrDisabledBrush}, RelativeSource={RelativeSource Self}}" />
                </Style>
            </StatusBar.Resources>
            <StatusBarItem Grid.Column="0">
                <TextBlock Text="Line:" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <TextBlock Text="{Binding Row, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EditorControl}}}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <TextBlock Text="Col:" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <TextBlock Text="{Binding Column, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EditorControl}}}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="4" Visibility="{Binding IsSelectionEmpty, Converter={x:Static cv:Static.BoolToCollapsedOrVisible}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EditorControl}}}">
                <TextBlock Text="Selected chars:" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="5" Visibility="{Binding IsSelectionEmpty, Converter={x:Static cv:Static.BoolToCollapsedOrVisible}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EditorControl}}}">
                <TextBlock Text="{Binding SelectionLength, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EditorControl}}}" />
            </StatusBarItem>

            <Separator Grid.Column="6" />
            <StatusBarItem Grid.Column="7">
                <TextBlock Text="Formatting:" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="8">
                <TextBlock
                    FontWeight="Bold"
                    IsEnabled="{Binding IsBold}"
                    Text="B" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="9">
                <TextBlock
                    FontStyle="Italic"
                    FontWeight="Bold"
                    IsEnabled="{Binding IsItalics}"
                    Text="I" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="10">
                <TextBlock
                    FontWeight="Bold"
                    IsEnabled="{Binding IsUnderlined}"
                    Text="U"
                    TextDecorations="Underline" />
            </StatusBarItem>

            <Separator Grid.Column="11" />
            <StatusBarItem Grid.Column="12">
                <TextBlock Foreground="{Binding FontColor}" Text="Text Color" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="13">
                <TextBlock Background="{Binding FontBackgroundColor}" Text="Highlight" />
            </StatusBarItem>
            <Separator Grid.Column="15" />
            <StatusBarItem Grid.Column="16">
                <TextBlock Text="Font size:" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="17">
                <TextBlock Text="{Binding TextSize, StringFormat=\{0:F0\} pt}" />
            </StatusBarItem>




            <StatusBarItem Grid.Column="19">
                <TextBlock IsEnabled="{Binding IsInsertModeOn}" Text="INS" />
            </StatusBarItem>
            <Separator Grid.Column="20" />




            <StatusBarItem Grid.Column="21" HorizontalAlignment="Right">
                <TextBlock Text="Line count:" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="22" HorizontalAlignment="Right">
                <TextBlock Text="{Binding LineCount, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EditorControl}}}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="23" HorizontalAlignment="Right">
                <TextBlock Text="Word count:" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="24" HorizontalAlignment="Right">
                <TextBlock Text="{Binding CountOfWords, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EditorControl}}}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="25" HorizontalAlignment="Right">
                <TextBlock Text="Char count:" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="26" HorizontalAlignment="Right">
                <TextBlock Text="{Binding CountOfChars, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EditorControl}}}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>







